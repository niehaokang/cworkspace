每个零件都有长度(l)和重量(w)
所以我用一个结构体来存储
struct product
{
    int l;
    int w;
};
实际上也可以用数组来存储,比如n个零件，就定义个数组a[n][2]
a[i][0]，a[i][1]风别是地i个零件的长度和重量
这里我用结构体的原因是想用vector，结构体是一个整体，可以方便的
插入到vector里，但是数组不太方便

关键部分的思想是
首先根据l的非减排序，尽量让保持非减
举个实际例子
l 2 3 3 8 9
w 3 5 8 4 7
也即是l肯定非减的，如果无法同时满足w非减，则以l为准，例如第三个零件3 8 和
第四个零件 8 4，这一步是通过sort函数排序实现的，compare是比较函数

然后从前到后遍历w如果w一直在递增，则可以分成一组，一旦比上一个w小，
则需要另分一组，后面的每一个零件都要和已经分好组的零件比较
